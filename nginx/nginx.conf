# Redirect to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name wank.party;
    server_name www.wank.party;

    location / {
        return 301 https://wank.party$request_uri;
    }

    include letsencrypt.conf;
}

# Kill www.*
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.wank.party;

    ssl_certificate /var/lib/acme/live/wank.party/fullchain;
    ssl_certificate_key /var/lib/acme/live/wank.party/privkey;
    include ssl.conf;

    location / {
        return 301 https://wank.party$request_uri;
    }

    include letsencrypt.conf;
}

# Here come dat config
upstream srht {
    server unix:///var/run/uwsgi/wankparty_srht.sock;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name wank.party;

    ssl_certificate /var/lib/acme/live/wank.party/fullchain;
    ssl_certificate_key /var/lib/acme/live/wank.party/privkey;
    include ssl.conf;

    # Upload limit
    client_max_body_size 75M;

    gzip on;
    gzip_types text/javascript application/javascript text/css;

    location @uwsgi {
        uwsgi_pass srht;
        include uwsgi_params;
    }

    location /api/ {
        uwsgi_pass srht;
        include uwsgi_params;
    }

    location /oauth/ {
        uwsgi_pass srht;
        include uwsgi_params;
    }

    location /reset/ {
        uwsgi_pass srht;
        include uwsgi_params;
    }

    location ~ ^/([A-Za-z0-9._-]*)$ {
        include mime.types;
        types {
            text/plain sh;
            text/plain go py cs c java fish;
            text/plain rb rs lua ls hy asm S conf;
            text/plain moon log md coffee;
            text/plain scss less d hs;
            text/plain vhd ucf;
        }
        charset utf-8;

        # These files never change, cache them aggressively
        add_header Cache-Control public;
        expires max;

        root /home/srht/storage/;
        try_files $uri @uwsgi;
    }

    location /.well-known {
        alias /srv/http/wankparty/.well-known;

        # Rarely changes (if at all)
        add_header Cache-Control public;
        expires 1M;
    }

    location = /robots.txt {
        alias /srv/http/wankparty/robots.txt;

        # Rarely changes (if at all)
        add_header Cache-Control public;
        expires 1M;
    }

    location /static {
        alias /home/srht/sr.ht/static/;

        # Static assets should be explicitly validated
        add_header Cache-Control public,no-cache;
        expires 1M;
    }

    location /static/moe {
        alias /home/srht/sr.ht/static/moe;
        autoindex on;

        # Rarely changes
        add_header Cache-Control public;
        expires 1M;
    }

    include letsencrypt.conf;
}
